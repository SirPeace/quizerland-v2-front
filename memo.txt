# Установка проекта :

 $ npx create-next-app@latest --experimental-app nextjs13-with-mui-and-tailwindcss --typescript

 $ npm install @mui/material @emotion/react @emotion/styled
 $ npm install @mui/icons-material

----- 

# Установка Redux : 

 Вместе с проектом :

 $ npx create-next-app --example with-redux with-redux-app

 В уже установленное приложение :

 $ npm i @reduxjs/toolkit react-redux

-----

# Настройка взаимодействия MUI и TailwindCss :

  // tailwind.config.ts :

	important: '#__next',

	// globals.css - отключить ( @tailwind base )

	/* @tailwind base; */
     @tailwind components;
     @tailwind utilities;

	// layout.tsx - добавить id :

		id='__next'	

-----

# Настройка EsLint & Prettier :

  $ npm init @eslint/config
	$ npm i -D prettier eslint-config-prettier eslint-plugin-prettier
	$ npm install eslint-plugin-react-hooks --save-dev

-----

# Настройка предупреждения при установке проекта (npm будет упорно отказываться устанавливать (или даже рассматривать возможность установки) любой пакет, утверждающий, что он не совместим с текущей версией Node.js. & Npm)

  1 - добавить в package.json:
		"engines": {
		  "npm": ">=9.0.0 <10.0.0",
		  "node": ">=18.0.0 <19.0.0"
	  }

	2 - добавить в проект файл .npmrc:
	   engine-strict=true

-----

# ts-pattern - библиотека сопоставления шаблонов в TypeScript 

  $ npm i ts-pattern

-----

# Настройка metadata :

export const metadata: Metadata = {
	title: 'Quizerland',
	description: 'Приложение Nextjs для создания тестов',
	viewport: {
		width: 'device-width',
		initialScale: 1,
	},
	icons: [
		{
			rel: 'icon',
			type: 'image/ico',
			sizes: '32x32',
			url: './public/favicon.ico',
		},
	],
}


